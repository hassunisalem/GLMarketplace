{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.getDevice = getDevice;\n\nvar _ssrWindow = require(\"ssr-window\");\n\nvar _getSupport = require(\"./get-support\");\n\nvar device;\n\nfunction calcDevice(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      userAgent = _ref.userAgent;\n\n  var support = (0, _getSupport.getSupport)();\n  var window = (0, _ssrWindow.getWindow)();\n  var platform = window.navigator.platform;\n  var ua = userAgent || window.navigator.userAgent;\n  var device = {\n    ios: false,\n    android: false\n  };\n  var screenWidth = window.screen.width;\n  var screenHeight = window.screen.height;\n  var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n  var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  var windows = platform === 'Win32';\n  var macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n  var iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(screenWidth + \"x\" + screenHeight) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  } // Android\n\n\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  } // Export object\n\n\n  return device;\n}\n\nfunction getDevice(overrides) {\n  if (overrides === void 0) {\n    overrides = {};\n  }\n\n  if (!device) {\n    device = calcDevice(overrides);\n  }\n\n  return device;\n}","map":{"version":3,"sources":["C:/Users/hasss/Documents/ReactProjects/GLMarketplace/marketplace/node_modules/swiper/cjs/utils/get-device.js"],"names":["exports","__esModule","getDevice","_ssrWindow","require","_getSupport","device","calcDevice","_temp","_ref","userAgent","support","getSupport","window","getWindow","platform","navigator","ua","ios","android","screenWidth","screen","width","screenHeight","height","match","ipad","ipod","iphone","windows","macos","iPadScreens","touch","indexOf","os","overrides"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.getDevice = getDevice;\n\nvar _ssrWindow = require(\"ssr-window\");\n\nvar _getSupport = require(\"./get-support\");\n\nvar device;\n\nfunction calcDevice(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      userAgent = _ref.userAgent;\n\n  var support = (0, _getSupport.getSupport)();\n  var window = (0, _ssrWindow.getWindow)();\n  var platform = window.navigator.platform;\n  var ua = userAgent || window.navigator.userAgent;\n  var device = {\n    ios: false,\n    android: false\n  };\n  var screenWidth = window.screen.width;\n  var screenHeight = window.screen.height;\n  var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n  var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  var windows = platform === 'Win32';\n  var macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n  var iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(screenWidth + \"x\" + screenHeight) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  } // Android\n\n\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  } // Export object\n\n\n  return device;\n}\n\nfunction getDevice(overrides) {\n  if (overrides === void 0) {\n    overrides = {};\n  }\n\n  if (!device) {\n    device = calcDevice(overrides);\n  }\n\n  return device;\n}"]},"metadata":{},"sourceType":"script"}