{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = updateProgress;\n\nvar _utils = require(\"../../../utils/utils\");\n\nfunction updateProgress(translate) {\n  var swiper = this;\n\n  if (typeof translate === 'undefined') {\n    var multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n\n  var params = swiper.params;\n  var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  var progress = swiper.progress,\n      isBeginning = swiper.isBeginning,\n      isEnd = swiper.isEnd;\n  var wasBeginning = isBeginning;\n  var wasEnd = isEnd;\n\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n\n  (0, _utils.extend)(swiper, {\n    progress: progress,\n    isBeginning: isBeginning,\n    isEnd: isEnd\n  });\n  if (params.watchSlidesProgress || params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}","map":{"version":3,"sources":["C:/Users/hasss/Documents/ReactProjects/GLMarketplace/marketplace/node_modules/swiper/cjs/components/core/update/updateProgress.js"],"names":["exports","__esModule","default","updateProgress","_utils","require","translate","swiper","multiplier","rtlTranslate","params","translatesDiff","maxTranslate","minTranslate","progress","isBeginning","isEnd","wasBeginning","wasEnd","extend","watchSlidesProgress","watchSlidesVisibility","centeredSlides","autoHeight","updateSlidesProgress","emit"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBC,cAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,sBAAD,CAApB;;AAEA,SAASF,cAAT,CAAwBG,SAAxB,EAAmC;AACjC,MAAIC,MAAM,GAAG,IAAb;;AAEA,MAAI,OAAOD,SAAP,KAAqB,WAAzB,EAAsC;AACpC,QAAIE,UAAU,GAAGD,MAAM,CAACE,YAAP,GAAsB,CAAC,CAAvB,GAA2B,CAA5C,CADoC,CACW;;AAE/CH,IAAAA,SAAS,GAAGC,MAAM,IAAIA,MAAM,CAACD,SAAjB,IAA8BC,MAAM,CAACD,SAAP,GAAmBE,UAAjD,IAA+D,CAA3E;AACD;;AAED,MAAIE,MAAM,GAAGH,MAAM,CAACG,MAApB;AACA,MAAIC,cAAc,GAAGJ,MAAM,CAACK,YAAP,KAAwBL,MAAM,CAACM,YAAP,EAA7C;AACA,MAAIC,QAAQ,GAAGP,MAAM,CAACO,QAAtB;AAAA,MACIC,WAAW,GAAGR,MAAM,CAACQ,WADzB;AAAA,MAEIC,KAAK,GAAGT,MAAM,CAACS,KAFnB;AAGA,MAAIC,YAAY,GAAGF,WAAnB;AACA,MAAIG,MAAM,GAAGF,KAAb;;AAEA,MAAIL,cAAc,KAAK,CAAvB,EAA0B;AACxBG,IAAAA,QAAQ,GAAG,CAAX;AACAC,IAAAA,WAAW,GAAG,IAAd;AACAC,IAAAA,KAAK,GAAG,IAAR;AACD,GAJD,MAIO;AACLF,IAAAA,QAAQ,GAAG,CAACR,SAAS,GAAGC,MAAM,CAACM,YAAP,EAAb,IAAsCF,cAAjD;AACAI,IAAAA,WAAW,GAAGD,QAAQ,IAAI,CAA1B;AACAE,IAAAA,KAAK,GAAGF,QAAQ,IAAI,CAApB;AACD;;AAED,GAAC,GAAGV,MAAM,CAACe,MAAX,EAAmBZ,MAAnB,EAA2B;AACzBO,IAAAA,QAAQ,EAAEA,QADe;AAEzBC,IAAAA,WAAW,EAAEA,WAFY;AAGzBC,IAAAA,KAAK,EAAEA;AAHkB,GAA3B;AAKA,MAAIN,MAAM,CAACU,mBAAP,IAA8BV,MAAM,CAACW,qBAArC,IAA8DX,MAAM,CAACY,cAAP,IAAyBZ,MAAM,CAACa,UAAlG,EAA8GhB,MAAM,CAACiB,oBAAP,CAA4BlB,SAA5B;;AAE9G,MAAIS,WAAW,IAAI,CAACE,YAApB,EAAkC;AAChCV,IAAAA,MAAM,CAACkB,IAAP,CAAY,uBAAZ;AACD;;AAED,MAAIT,KAAK,IAAI,CAACE,MAAd,EAAsB;AACpBX,IAAAA,MAAM,CAACkB,IAAP,CAAY,iBAAZ;AACD;;AAED,MAAIR,YAAY,IAAI,CAACF,WAAjB,IAAgCG,MAAM,IAAI,CAACF,KAA/C,EAAsD;AACpDT,IAAAA,MAAM,CAACkB,IAAP,CAAY,UAAZ;AACD;;AAEDlB,EAAAA,MAAM,CAACkB,IAAP,CAAY,UAAZ,EAAwBX,QAAxB;AACD","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = updateProgress;\n\nvar _utils = require(\"../../../utils/utils\");\n\nfunction updateProgress(translate) {\n  var swiper = this;\n\n  if (typeof translate === 'undefined') {\n    var multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n\n  var params = swiper.params;\n  var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  var progress = swiper.progress,\n      isBeginning = swiper.isBeginning,\n      isEnd = swiper.isEnd;\n  var wasBeginning = isBeginning;\n  var wasEnd = isEnd;\n\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n\n  (0, _utils.extend)(swiper, {\n    progress: progress,\n    isBeginning: isBeginning,\n    isEnd: isEnd\n  });\n  if (params.watchSlidesProgress || params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}"]},"metadata":{},"sourceType":"script"}