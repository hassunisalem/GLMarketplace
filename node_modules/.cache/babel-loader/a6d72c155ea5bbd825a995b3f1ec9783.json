{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = getBreakpoint;\n\nvar _ssrWindow = require(\"ssr-window\");\n\nfunction getBreakpoint(breakpoints, base, containerEl) {\n  if (base === void 0) {\n    base = 'window';\n  }\n\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  var breakpoint = false;\n  var window = (0, _ssrWindow.getWindow)();\n  var currentWidth = base === 'window' ? window.innerWidth : containerEl.clientWidth;\n  var currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  var points = Object.keys(breakpoints).map(function (point) {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      var minRatio = parseFloat(point.substr(1));\n      var value = currentHeight * minRatio;\n      return {\n        value: value,\n        point: point\n      };\n    }\n\n    return {\n      value: point,\n      point: point\n    };\n  });\n  points.sort(function (a, b) {\n    return parseInt(a.value, 10) - parseInt(b.value, 10);\n  });\n\n  for (var i = 0; i < points.length; i += 1) {\n    var _points$i = points[i],\n        point = _points$i.point,\n        value = _points$i.value;\n\n    if (value <= currentWidth) {\n      breakpoint = point;\n    }\n  }\n\n  return breakpoint || 'max';\n}","map":{"version":3,"sources":["C:/Users/hasss/Documents/ReactProjects/GLMarketplace/marketplace/node_modules/swiper/cjs/components/core/breakpoints/getBreakpoint.js"],"names":["exports","__esModule","default","getBreakpoint","_ssrWindow","require","breakpoints","base","containerEl","undefined","breakpoint","window","getWindow","currentWidth","innerWidth","clientWidth","currentHeight","innerHeight","clientHeight","points","Object","keys","map","point","indexOf","minRatio","parseFloat","substr","value","sort","a","b","parseInt","i","length","_points$i"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBC,aAAlB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AAEA,SAASF,aAAT,CAAuBG,WAAvB,EAAoCC,IAApC,EAA0CC,WAA1C,EAAuD;AACrD,MAAID,IAAI,KAAK,KAAK,CAAlB,EAAqB;AACnBA,IAAAA,IAAI,GAAG,QAAP;AACD;;AAED,MAAI,CAACD,WAAD,IAAgBC,IAAI,KAAK,WAAT,IAAwB,CAACC,WAA7C,EAA0D,OAAOC,SAAP;AAC1D,MAAIC,UAAU,GAAG,KAAjB;AACA,MAAIC,MAAM,GAAG,CAAC,GAAGP,UAAU,CAACQ,SAAf,GAAb;AACA,MAAIC,YAAY,GAAGN,IAAI,KAAK,QAAT,GAAoBI,MAAM,CAACG,UAA3B,GAAwCN,WAAW,CAACO,WAAvE;AACA,MAAIC,aAAa,GAAGT,IAAI,KAAK,QAAT,GAAoBI,MAAM,CAACM,WAA3B,GAAyCT,WAAW,CAACU,YAAzE;AACA,MAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYf,WAAZ,EAAyBgB,GAAzB,CAA6B,UAAUC,KAAV,EAAiB;AACzD,QAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,OAAN,CAAc,GAAd,MAAuB,CAAxD,EAA2D;AACzD,UAAIC,QAAQ,GAAGC,UAAU,CAACH,KAAK,CAACI,MAAN,CAAa,CAAb,CAAD,CAAzB;AACA,UAAIC,KAAK,GAAGZ,aAAa,GAAGS,QAA5B;AACA,aAAO;AACLG,QAAAA,KAAK,EAAEA,KADF;AAELL,QAAAA,KAAK,EAAEA;AAFF,OAAP;AAID;;AAED,WAAO;AACLK,MAAAA,KAAK,EAAEL,KADF;AAELA,MAAAA,KAAK,EAAEA;AAFF,KAAP;AAID,GAdY,CAAb;AAeAJ,EAAAA,MAAM,CAACU,IAAP,CAAY,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC1B,WAAOC,QAAQ,CAACF,CAAC,CAACF,KAAH,EAAU,EAAV,CAAR,GAAwBI,QAAQ,CAACD,CAAC,CAACH,KAAH,EAAU,EAAV,CAAvC;AACD,GAFD;;AAIA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,MAAM,CAACe,MAA3B,EAAmCD,CAAC,IAAI,CAAxC,EAA2C;AACzC,QAAIE,SAAS,GAAGhB,MAAM,CAACc,CAAD,CAAtB;AAAA,QACIV,KAAK,GAAGY,SAAS,CAACZ,KADtB;AAAA,QAEIK,KAAK,GAAGO,SAAS,CAACP,KAFtB;;AAIA,QAAIA,KAAK,IAAIf,YAAb,EAA2B;AACzBH,MAAAA,UAAU,GAAGa,KAAb;AACD;AACF;;AAED,SAAOb,UAAU,IAAI,KAArB;AACD","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = getBreakpoint;\n\nvar _ssrWindow = require(\"ssr-window\");\n\nfunction getBreakpoint(breakpoints, base, containerEl) {\n  if (base === void 0) {\n    base = 'window';\n  }\n\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  var breakpoint = false;\n  var window = (0, _ssrWindow.getWindow)();\n  var currentWidth = base === 'window' ? window.innerWidth : containerEl.clientWidth;\n  var currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  var points = Object.keys(breakpoints).map(function (point) {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      var minRatio = parseFloat(point.substr(1));\n      var value = currentHeight * minRatio;\n      return {\n        value: value,\n        point: point\n      };\n    }\n\n    return {\n      value: point,\n      point: point\n    };\n  });\n  points.sort(function (a, b) {\n    return parseInt(a.value, 10) - parseInt(b.value, 10);\n  });\n\n  for (var i = 0; i < points.length; i += 1) {\n    var _points$i = points[i],\n        point = _points$i.point,\n        value = _points$i.value;\n\n    if (value <= currentWidth) {\n      breakpoint = point;\n    }\n  }\n\n  return breakpoint || 'max';\n}"]},"metadata":{},"sourceType":"script"}